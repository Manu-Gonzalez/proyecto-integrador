ng GetLocationTypeText(LocationType locationType) {
    string resourceName = PropertyConverter.EnumToString(typeof(LocationType), locationType);
    return ((string) GetLocalResourceObject(resourceName));
}

void Page_Load() {
    if (!IsPostBack) {
        string appPath = ApplicationPath;
        if (!String.IsNullOrEmpty(appPath)) {
            MainTitle.Text = String.Format((string)GetLocalResourceObject("TitleForSite"), appPath);
        }

        BindAppSettings();

        AppSettingGridView.HeaderStyle.HorizontalAlign = DirectionalityHorizontalAlign;
    }
}

void AppSettingGridView_Delete(object sender, GridViewDeleteEventArgs e) {
    GridViewRow row = AppSettingGridView.Rows[e.RowIndex];
    TableCell nameCell = row.Cells[1];
    Name.Value = HttpUtility.HtmlDecode(nameCell.Text.ToString());
    DeleteName.Text = String.Format((string)GetLocalResourceObject("ConfirmationText"), nameCell.Text);

    // Go to confirmation UI
    Master.SetDisplayUI(true);
}

void AppSettingGridView_Edit(object sender, GridViewEditEventArgs e) {
    StringBuilder editUrl = new StringBuilder();
    editUrl.Append("EditAppSetting.aspx");

    GridViewRow row = AppSettingGridView.Rows[e.NewEditIndex];
    TableCell nameCell = row.Cells[1];
    TableCell valueCell = row.Cells[2];

    string tempString = HttpUtility.HtmlDecode(nameCell.Text.ToString());
    editUrl.Append("?name=");
    tempString =  HttpUtility.UrlEncode(tempString);

    editUrl.Append(tempString);

    tempString = HttpUtility.HtmlDecode(valueCell.Text.ToString());
    editUrl.Append("&value=");
    tempString =  HttpUtility.UrlEncode(tempString);

    editUrl.Append(tempString);

    Response.Redirect(editUrl.ToString());
}

void AppSettingGridView_PageIndexChanged(object sender, GridViewPageEventArgs e) {
    AppSettingGridView.PageIndex = e.NewPageIndex;
    BindAppSettings();